node('master') {
    stage("Checkout Repository") {
        checkout scm
    }

    stage("Run Tests") {

    }

    stage("Send Teams notification with results") {
        def reports = readJSON text: readFile("${env.WORKSPACE}/cucumber.json")
        def totalCount = 0
        def failedCount = 0
        for (i in 0..<reports.size()) {
            def testCases = reports[i]."elements"
            for (j in 0..<testCases.size()) {
                if (testCases[j]."after" != null) {
                    totalCount++
                    if (testCases[j]."after"[0]."result"."status" == "failed")
                        failedCount++
                }
            }
        }

        def passedCount = totalCount - failedCount
        def headerMsg = "Automation test run is done. Below are the results:\n\n"
        def passedMsg = "Passed: ${totalCount}\n\n"
        def failedMsg = "Failed: ${failedCount}\n\n"
        def totalMsg = "Total test run: ${totalCount}\n\n"
        def buildNumber = "Latest status of build #${BUILD_NUMBER}\n\n"
        def webhookUrl = "https://brainstationo365.webhook.office.com/webhookb2/abdae2c4-2c4d-4f20-877f-e09aac09d920@a1e21495-2087-4312-a718-7f84ad109439/IncomingWebhook/719a7f12dbba41a09fe3e37262ada354/6dc3c943-15d6-4bbf-a0d6-085ea568d15a"
        def message = buildNumber + headerMsg + passedMsg + failedMsg + totalMsg

        if (failedCount > 0) {
            office365ConnectorSend color: "#ff0000", remarks: "Started by user admin", message: message, status: "Build UNSTABLE", webhookUrl: webhookUrl
        } else {
            office365ConnectorSend color: "#00FF00",
                    factDefinitions: [
                            [name: "Passed", template: passedCount],
                            [name: "Failed", template: failedCount],
                            [name: "Total", template: failedCount]
                    ],
                    message: "My custom message",
                    status: "Build SUCCESS",
                    webhookUrl: webhookUrl
        }

//        def failedCount = parsedReportJson.total - parsedReportJson.passed
//        def headerMsg = "Your ${env.SELECT_TEST_TYPE_TAG} TestCafe UI test run is done. Below are the results: \n\n"
//        def featureFlagsMsg = env.FEATURE_FLAGS ? "Feature Flags: ${env.FEATURE_FLAGS}\n\n" : ""
//        def passedMsg = " :white_check_mark: Passed: ${parsedReportJson.passed} \n\n"
//        def failedMsg = " :failed: Failed: ${failedCount} \n\n"
//        def skippedMsg = " :fast_forward: Skipped: ${parsedReportJson.skipped} \n\n"
//        def buildMsg = " <${env.BUILD_URL}HTML_20Report/myreports.html|View in Jenkins>"
//        def message = headerMsg + featureFlagsMsg + passedMsg + failedMsg + skippedMsg + buildMsg
//
//        if (failedCount > 0) {
//            sendSlackMessage(env.SLACK_CHANNEL, message, "danger")
//        } else {
//            sendSlackMessage(env.SLACK_CHANNEL, message, "good")
//        }
    }
}