node('master') {
    def reportDir = "${env.WORKSPACE}/cucumber.json"
    def webhookUrl = "https://brainstationo365.webhook.office.com/webhookb2/abdae2c4-2c4d-4f20-877f-e09aac09d920@a1e21495-2087-4312-a718-7f84ad109439/IncomingWebhook/719a7f12dbba41a09fe3e37262ada354/6dc3c943-15d6-4bbf-a0d6-085ea568d15a"
    def totalCount = 0
    def failedCount = 0
    def passedCount = 0

    stage("Checkout Repository") {
        checkout scm
    }

    stage("Run Tests") {

    }

    stage("Generate test results") {
        def reports = readJSON text: readFile(reportDir)
        for (i in 0..<reports.size()) {
            def testCases = reports[i]."elements"
            for (j in 0..<testCases.size()) {
                if (testCases[j]."after" != null) {
                    totalCount++
                    if (testCases[j]."after"[0]."result"."status" == "failed")
                        failedCount++
                }
            }
        }
        passedCount = totalCount - failedCount
    }

    stage("Send Teams notification") {
//        office365ConnectorSend(
//                color: failedCount == 0 ? "#00FF00" : "#ff0000",
//                message: "Latest status of build #${BUILD_NUMBER}\n\n",
//                status: "Build ${currentBuild.currentResult}",
//                factDefinitions: [
//                        [name: "Failed:", template: "${failedCount}"],
//                        [name: "Passed:", template: "${passedCount}"],
//                        [name: "Total run:", template: "${totalCount}"],
//                ],
//                webhookUrl: webhookUrl
//        )
    }

    stage("Send Slack notification") {
//        def passedMsg = " :white_check_mark: Passed: ${passedCount} \n\n"
//        def failedMsg = " :failed: Failed: ${failedCount} \n\n"
//        def skippedMsg = " :fast_forward: Total: ${totalCount} \n\n"
//        def status = passedMsg + failedMsg + skippedMsg
//
//        if (failedCount > 0)
//            sendSlackMessage(env.SLACK_CHANNEL, status, "danger")
//        else
//            sendSlackMessage(env.SLACK_CHANNEL, status, "good")
    }

    stage("Send GChat notification") {
        String temp = "faizul"
        println(temp)
        googlechatnotification(message: temp, notifySuccess: true, suppressInfoLoggers: false, url: "https://chat.googleapis.com/v1/spaces/AAAAX8RklvA/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=87YPloRrYP_QJxuMwp6pxOEJrMyoXYiQQ4I2q5Irg1Q%3D")
    }
}